spring.datasource.url= jdbc:mysql://localhost:3306/eventsapp_db
spring.datasource.username=root
spring.datasource.password=root123
 
spring.jpa.hibernate.ddl-auto=update

security.basic.enabled=false
token.secret=eventsapp

rdd.document.manager.upload.location = /eventsapp/documents
rdd.document.download.url = /eventsappservices/Document/DownloadFile?udp=

#email properties - Local
mail.host=smtp.gmail.com
mail.port=587
mail.sender=appemails158@gmail.com
mail.authenticateUserId=appemails158@gmail.com
mail.authenticatePwd=1qaz2wsx!@#
mail.ssLFactory=javax.net.ssl.SSLSocketFactory

mail.footernote.en=Please call 775465454 if you have any queries.
mail.footernote.si=\u0D94\u0DB6 \u0D9A\u0DBB\u0DB1 \u0D95\u0DB1\u0DD1\u0DB8 \u0DC0\u0DD2\u0DB8\u0DC3\u0DD4\u0DB8\u0D9A\u0DAF\u0DD3 775465454 \u0D85\u0DB8\u0DAD\u0DB1\u0DCA\u0DB1
mail.footernote.ta=\u0BA8\u0BC0\u0B99\u0BCD\u0B95\u0BB3\u0BCD \u0B8E\u0BA8\u0BCD\u0BA4 \u0B95\u0BC7\u0BB3\u0BCD\u0BB5\u0BBF\u0B95\u0BB3\u0BCD \u0B87\u0BB0\u0BC1\u0BA8\u0BCD\u0BA4\u0BBE\u0BB2\u0BCD 775465454 \u0B95\u0BC2\u0BAA\u0BCD\u0BAA\u0BBF\u0B9F\u0BC1\u0B99\u0BCD\u0B95\u0BB3\u0BCD

mail.signature.en=<div>Thank you</div>
mail.signature.si=<div>\u0DC3\u0DCA\u0DAD\u0DD4\u0DAD\u0DD2\u0DBA\u0DD2</div>
mail.signature.ta=<div>\u0BA8\u0BA9\u0BCD\u0BB1\u0BBF</div>

mail.addressing.en=Dear 
mail.addressing.si=\u0DC4\u0DD2\u0DAD\u0DC0\u0DAD\u0DCA
mail.addressing.ta=\u0B85\u0BA9\u0BCD\u0BAA\u0BC7
#sms properties
#Bulk sms url
sms.end.point.url="";

#SMS log file path
sms.log.file.path.without.file.name=/eventsapp/


spring.freemarker.suffix= .ftl
# Enable template caching.
spring.freemarker.cache=false
# Template encoding.
spring.freemarker.charset=UTF-8
# Check that the templates location exists.
spring.freemarker.check-template-location=true
# Comma-separated list of template paths. 
spring.freemarker.template-loader-path=classpath:/email_templates/ 

# HTTP encoding (HttpEncodingProperties)
# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true


# MULTIPART (MultipartProperties)
# Enable support of multi-part uploads.
spring.http.multipart.enabled=true
# Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.file-size-threshold=5MB
# Intermediate location of uploaded files.
spring.http.multipart.location=/rubber_resource/ 
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-file-size=100MB
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-request-size=150MB
# Whether to resolve the multipart request lazily at the time of file or parameter access.
spring.http.multipart.resolve-lazily=false 

# JMX
# JMX domain name.
spring.jmx.default-domain=EVENTSAPP
# Expose management beans to the JMX domain. 
spring.jmx.enabled=true
# MBeanServer bean name.
#spring.jmx.server=mbeanServer

jmx.rmi.host=localhost
jmx.rmi.port=1099

# JMX ENDPOINT (EndpointMBeanExportProperties)
# Enable JMX export of all endpoints.
endpoints.jmx.enabled=true
# Ensure that ObjectNames are modified in case of conflict.
endpoints.jmx.unique-names=true

server.error.whitelabel.enabled=false


